--   List of table data:
--   ADMISSIONS.csv
--   CALLOUT.csv
--   CAREGIVERS.csv
--   CHARTEVENTS.csv
--   CPTEVENTS.csv
--   DATETIMEEVENTS.csv
--   DIAGNOSES_ICD.csv
--   DRGCODES.csv
--   D_CPT.csv
--   D_ICD_DIAGNOSES.csv
--   D_ICD_PROCEDURES.csv
--   D_ITEMS.csv
--   D_LABITEMS.csv
--   ICUSTAYS.csv
--   INPUTEVENTS_CV.csv
--   INPUTEVENTS_MV.csv
--   LABEVENTS.csv
--   MICROBIOLOGYEVENTS.csv
--   NOTEEVENTS.csv
--   OUTPUTEVENTS.csv
--   PATIENTS.csv
--   PRESCRIPTIONS.csv
--   PROCEDUREEVENTS_MV.csv
--   PROCEDURES_ICD.csv
--   SERVICES.csv
--   TRANSFERS.csv

DROP TABLE IF EXISTS ADMISSIONS;
CREATE TABLE ADMISSIONS (	-- rows=58976
   ROW_ID SMALLINT,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ADMITTIME TIMESTAMP,
   DISCHTIME TIMESTAMP,
   DEATHTIME TIMESTAMP,
   ADMISSION_TYPE VARCHAR(50),
   ADMISSION_LOCATION VARCHAR(50),
   DISCHARGE_LOCATION VARCHAR(50),
   INSURANCE VARCHAR(255),
   LANGUAGE VARCHAR(10),
   RELIGION VARCHAR(50),
   MARITAL_STATUS VARCHAR(50),
   ETHNICITY VARCHAR(200),
   EDREGTIME TIMESTAMP,
   EDOUTTIME TIMESTAMP,
   DIAGNOSIS TEXT,
   HOSPITAL_EXPIRE_FLAG SMALLINT,
   HAS_CHARTEVENTS_DATA SMALLINT,
   PRIMARY KEY (HADM_ID)
);



DROP TABLE IF EXISTS CALLOUT;
CREATE TABLE CALLOUT (	-- rows=34499
   ROW_ID SMALLINT,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   SUBMIT_WARDID SMALLINT,
   SUBMIT_CAREUNIT VARCHAR(15),
   CURR_WARDID SMALLINT,
   CURR_CAREUNIT VARCHAR(15),
   CALLOUT_WARDID SMALLINT,
   CALLOUT_SERVICE VARCHAR(10),
   REQUEST_TELE SMALLINT,
   REQUEST_RESP SMALLINT,
   REQUEST_CDIFF SMALLINT,
   REQUEST_MRSA SMALLINT,
   REQUEST_VRE SMALLINT,
   CALLOUT_STATUS VARCHAR(20),
   CALLOUT_OUTCOME VARCHAR(20),
   DISCHARGE_WARDID SMALLINT,
   ACKNOWLEDGE_STATUS VARCHAR(20),
   CREATETIME TIMESTAMP,
   UPDATETIME TIMESTAMP,
   ACKNOWLEDGETIME TIMESTAMP,
   OUTCOMETIME TIMESTAMP,
   FIRSTRESERVATIONTIME TIMESTAMP,
   CURRENTRESERVATIONTIME TIMESTAMP,
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS CAREGIVERS;
CREATE TABLE CAREGIVERS (	-- rows=7567
   ROW_ID SMALLINT,
   CGID SMALLINT,
   LABEL VARCHAR(15),
   DESCRIPTION VARCHAR(30),
   PRIMARY KEY (CGID)
);



DROP TABLE IF EXISTS CHARTEVENTS;
CREATE TABLE CHARTEVENTS (	-- rows=263201375
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   ITEMID INTEGER,
   CHARTTIME TIMESTAMP,
   STORETIME TIMESTAMP,
   CGID SMALLINT,
   VALUE TEXT,
   VALUENUM FLOAT,
   VALUEUOM VARCHAR(255),
   WARNING SMALLINT,
   ERROR SMALLINT,
   RESULTSTATUS VARCHAR(255),
   STOPPED VARCHAR(255),
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS CPTEVENTS;
CREATE TABLE CPTEVENTS (	-- rows=573146
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   COSTCENTER VARCHAR(10),
   CHARTDATE TIMESTAMP,
   CPT_CD VARCHAR(10),
   CPT_NUMBER INTEGER,
   CPT_SUFFIX VARCHAR(5),
   TICKET_ID_SEQ SMALLINT,
   SECTIONHEADER VARCHAR(50),
   SUBSECTIONHEADER TEXT,
   DESCRIPTION VARCHAR(200),
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS DATETIMEEVENTS;
CREATE TABLE DATETIMEEVENTS (	-- rows=4486049
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   ITEMID INTEGER,
   CHARTTIME TIMESTAMP,
   STORETIME TIMESTAMP,
   CGID SMALLINT,
   VALUE TIMESTAMP,
   VALUEUOM VARCHAR(50),
   WARNING SMALLINT,
   ERROR SMALLINT,
   RESULTSTATUS VARCHAR(50),
   STOPPED VARCHAR(50),
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS DIAGNOSES_ICD;
CREATE TABLE DIAGNOSES_ICD (	-- rows=651047
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   SEQ_NUM SMALLINT,
   ICD9_CODE VARCHAR(10),
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS DRGCODES;
CREATE TABLE DRGCODES (	-- rows=125557
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   DRG_TYPE VARCHAR(20),
   DRG_CODE VARCHAR(20),
   DESCRIPTION TEXT,
   DRG_SEVERITY SMALLINT,
   DRG_MORTALITY SMALLINT,
   PRIMARY KEY (ROW_ID)
);

DROP TABLE IF EXISTS D_CPT;
CREATE TABLE D_CPT (	-- rows=134
   ROW_ID SMALLINT,
   CATEGORY SMALLINT,
   SECTIONRANGE VARCHAR(100),
   SECTIONHEADER VARCHAR(50),
   SUBSECTIONRANGE VARCHAR(100),
   SUBSECTIONHEADER TEXT,
   CODESUFFIX VARCHAR(5),
   MINCODEINSUBSECTION INTEGER,
   MAXCODEINSUBSECTION INTEGER,
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS D_ICD_DIAGNOSES;
CREATE TABLE D_ICD_DIAGNOSES (	-- rows=14567
   ROW_ID SMALLINT,
   ICD9_CODE VARCHAR(10),
   SHORT_TITLE VARCHAR(50),
   LONG_TITLE TEXT,
   PRIMARY KEY (ICD9_CODE)
);



DROP TABLE IF EXISTS D_ICD_PROCEDURES;
CREATE TABLE D_ICD_PROCEDURES (	-- rows=3882
   ROW_ID SMALLINT,
   ICD9_CODE VARCHAR(10),
   SHORT_TITLE VARCHAR(50),
   LONG_TITLE TEXT,
   PRIMARY KEY (ICD9_CODE)
);



DROP TABLE IF EXISTS D_ITEMS;
CREATE TABLE D_ITEMS (	-- rows=12478
   ROW_ID SMALLINT,
   ITEMID INTEGER,
   LABEL VARCHAR(200),
   ABBREVIATION VARCHAR(100),
   DBSOURCE VARCHAR(20),
   LINKSTO VARCHAR(50),
   CATEGORY VARCHAR(100),
   UNITNAME VARCHAR(100),
   PARAM_TYPE VARCHAR(30),
   CONCEPTID SMALLINT,
   PRIMARY KEY (ITEMID)
);



DROP TABLE IF EXISTS D_LABITEMS;
CREATE TABLE D_LABITEMS (	-- rows=755
   ROW_ID SMALLINT,
   ITEMID SMALLINT,
   LABEL VARCHAR(100),
   FLUID VARCHAR(100),
   CATEGORY VARCHAR(100),
   LOINC_CODE VARCHAR(100),
   PRIMARY KEY (ITEMID)
);



DROP TABLE IF EXISTS ICUSTAYS;
CREATE TABLE ICUSTAYS (	-- rows=61532
   ROW_ID SMALLINT,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   DBSOURCE VARCHAR(20),
   FIRST_CAREUNIT VARCHAR(20),
   LAST_CAREUNIT VARCHAR(20),
   FIRST_WARDID SMALLINT,
   LAST_WARDID SMALLINT,
   INTIME TIMESTAMP,
   OUTTIME TIMESTAMP,
   LOS FLOAT,
   PRIMARY KEY (ICUSTAY_ID)
);


DROP TABLE IF EXISTS INPUTEVENTS_CV;
CREATE TABLE INPUTEVENTS_CV (	-- rows=17528894
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   CHARTTIME TIMESTAMP,
   ITEMID INTEGER,
   AMOUNT FLOAT,
   AMOUNTUOM VARCHAR(30),
   RATE FLOAT,
   RATEUOM VARCHAR(30),
   STORETIME TIMESTAMP,
   CGID SMALLINT,
   ORDERID INTEGER,
   LINKORDERID INTEGER,
   STOPPED VARCHAR(30),
   NEWBOTTLE SMALLINT,
   ORIGINALAMOUNT FLOAT,
   ORIGINALAMOUNTUOM VARCHAR(30),
   ORIGINALROUTE VARCHAR(30),
   ORIGINALRATE FLOAT,
   ORIGINALRATEUOM VARCHAR(30),
   ORIGINALSITE VARCHAR(30),
   PRIMARY KEY (ROW_ID)
);

DROP TABLE IF EXISTS INPUTEVENTS_MV;
CREATE TABLE INPUTEVENTS_MV (	-- rows=3618991
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   STARTTIME TIMESTAMP,
   ENDTIME TIMESTAMP,
   ITEMID INTEGER,
   AMOUNT FLOAT,
   AMOUNTUOM VARCHAR(30),	-- max=19
   RATE FLOAT,
   RATEUOM VARCHAR(30),	-- max=12
   STORETIME TIMESTAMP,
   CGID SMALLINT,
   ORDERID INTEGER,
   LINKORDERID INTEGER,
   ORDERCATEGORYNAME VARCHAR(100),	-- max=24
   SECONDARYORDERCATEGORYNAME VARCHAR(100),	-- max=24
   ORDERCOMPONENTTYPEDESCRIPTION VARCHAR(200),	-- max=57
   ORDERCATEGORYDESCRIPTION VARCHAR(50),	-- max=14
   PATIENTWEIGHT FLOAT,
   TOTALAMOUNT FLOAT,
   TOTALAMOUNTUOM VARCHAR(50),	-- max=2
   ISOPENBAG SMALLINT,
   CONTINUEINNEXTDEPT SMALLINT,
   CANCELREASON SMALLINT,
   STATUSDESCRIPTION VARCHAR(30),	-- max=15
   COMMENTS_EDITEDBY VARCHAR(30),	-- max=15
   COMMENTS_CANCELEDBY VARCHAR(100),	-- max=15
   COMMENTS_DATE TIMESTAMP,
   ORIGINALAMOUNT FLOAT,
   ORIGINALRATE FLOAT,
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS LABEVENTS;
CREATE TABLE LABEVENTS (	-- rows=27872575
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ITEMID SMALLINT,
   CHARTTIME TIMESTAMP,
   VALUE VARCHAR(200),
   VALUENUM FLOAT,
   VALUEUOM VARCHAR(20),	-- max=10
   FLAG VARCHAR(20),	-- max=8
   PRIMARY KEY (ROW_ID)
);


DROP TABLE IF EXISTS MICROBIOLOGYEVENTS;
CREATE TABLE MICROBIOLOGYEVENTS (	-- rows=328446
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   CHARTDATE TIMESTAMP,
   CHARTTIME TIMESTAMP,
   SPEC_ITEMID INTEGER,
   SPEC_TYPE_DESC VARCHAR(100),	-- max=56
   ORG_ITEMID INTEGER,
   ORG_NAME VARCHAR(100),	-- max=70
   ISOLATE_NUM SMALLINT,
   AB_ITEMID INTEGER,
   AB_NAME VARCHAR(30),	-- max=20
   DILUTION_TEXT VARCHAR(10),	-- max=6
   DILUTION_COMPARISON VARCHAR(20),	-- max=2
   DILUTION_VALUE SMALLINT,
   INTERPRETATION VARCHAR(5),	-- max=1
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS NOTEEVENTS;
CREATE TABLE NOTEEVENTS (	-- rows=2078705
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   CHARTDATE DATE,
   CHARTTIME TIMESTAMP,
   STORETIME TIMESTAMP,
   CATEGORY VARCHAR(50),	-- max=17
   DESCRIPTION VARCHAR(255),	-- max=80
   CGID SMALLINT,
   ISERROR SMALLINT,
   TEXT TEXT,	-- max=55725
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS OUTPUTEVENTS;
CREATE TABLE OUTPUTEVENTS (	-- rows=4349339
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   CHARTTIME TIMESTAMP,
   ITEMID INTEGER,
   VALUE FLOAT,
   VALUEUOM VARCHAR(30),	-- max=2
   STORETIME TIMESTAMP,
   CGID SMALLINT,
   STOPPED VARCHAR(30),	-- max=0
   NEWBOTTLE SMALLINT,
   ISERROR SMALLINT,
   PRIMARY KEY (ROW_ID)
);


DROP TABLE IF EXISTS PATIENTS;
CREATE TABLE PATIENTS (	-- rows=46520
   ROW_ID SMALLINT,
   SUBJECT_ID INTEGER,
   GENDER VARCHAR(5),	-- max=1
   DOB VARCHAR(255),	-- max=19
   DOD TIMESTAMP,
   DOD_HOSP TIMESTAMP,
   DOD_SSN TIMESTAMP,
   EXPIRE_FLAG VARCHAR(5),
   PRIMARY KEY (SUBJECT_ID)
);



DROP TABLE IF EXISTS PRESCRIPTIONS;
CREATE TABLE PRESCRIPTIONS (	-- rows=4156848
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   STARTDATE TIMESTAMP,
   ENDDATE TIMESTAMP,
   DRUG_TYPE VARCHAR(100),	-- max=8
   DRUG VARCHAR(100),	-- max=58
   DRUG_NAME_POE VARCHAR(100),	-- max=58
   DRUG_NAME_GENERIC VARCHAR(100),	-- max=49
   FORMULARY_DRUG_CD VARCHAR(120),	-- max=17
   GSN VARCHAR(200),
   NDC VARCHAR(20),	-- max=11
   PROD_STRENGTH VARCHAR(120),	-- max=60
   DOSE_VAL_RX VARCHAR(120),	-- max=26
   DOSE_UNIT_RX VARCHAR(120),	-- max=32
   FORM_VAL_DISP VARCHAR(120),	-- max=47
   FORM_UNIT_DISP VARCHAR(120),	-- max=13
   ROUTE VARCHAR(120),	-- max=28
   PRIMARY KEY (ROW_ID)
);

DROP TABLE IF EXISTS PROCEDUREEVENTS_MV;
CREATE TABLE PROCEDUREEVENTS_MV (	-- rows=258066
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   STARTTIME TIMESTAMP,
   ENDTIME TIMESTAMP,
   ITEMID INTEGER,
   VALUE FLOAT,
   VALUEUOM VARCHAR(30),	-- max=4
   LOCATION VARCHAR(30),	-- max=24
   LOCATIONCATEGORY VARCHAR(30),	-- max=19
   STORETIME TIMESTAMP,
   CGID SMALLINT,
   ORDERID INTEGER,
   LINKORDERID INTEGER,
   ORDERCATEGORYNAME VARCHAR(100),	-- max=21
   SECONDARYORDERCATEGORYNAME VARCHAR(100),	-- max=0
   ORDERCATEGORYDESCRIPTION VARCHAR(50),	-- max=12
   ISOPENBAG SMALLINT,
   CONTINUEINNEXTDEPT SMALLINT,
   CANCELREASON SMALLINT,
   STATUSDESCRIPTION VARCHAR(30),	-- max=15
   COMMENTS_EDITEDBY VARCHAR(30),	-- max=7
   COMMENTS_CANCELEDBY VARCHAR(30),	-- max=17
   COMMENTS_DATE TIMESTAMP,
   PRIMARY KEY (ORDERID)
);



DROP TABLE IF EXISTS PROCEDURES_ICD;
CREATE TABLE PROCEDURES_ICD (	-- rows=240095
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   SEQ_NUM SMALLINT,
   ICD9_CODE VARCHAR(10),	-- max=4
   PRIMARY KEY (ROW_ID)
);


DROP TABLE IF EXISTS SERVICES;
CREATE TABLE SERVICES (	-- rows=73343
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   TRANSFERTIME TIMESTAMP,
   PREV_SERVICE VARCHAR(20),	-- max=5
   CURR_SERVICE VARCHAR(20),	-- max=5
   PRIMARY KEY (ROW_ID)
);



DROP TABLE IF EXISTS TRANSFERS;
CREATE TABLE TRANSFERS (	-- rows=261897
   ROW_ID INTEGER,
   SUBJECT_ID INTEGER,
   HADM_ID INTEGER,
   ICUSTAY_ID INTEGER,
   DBSOURCE VARCHAR(20),	-- max=10
   EVENTTYPE VARCHAR(20),	-- max=9
   PREV_CAREUNIT VARCHAR(20),	-- max=5
   CURR_CAREUNIT VARCHAR(20),	-- max=5
   PREV_WARDID SMALLINT,
   CURR_WARDID SMALLINT,
   INTIME TIMESTAMP,
   OUTTIME TIMESTAMP,
   LOS FLOAT,
   PRIMARY KEY (ROW_ID)
);

ALTER TABLE ADMISSIONS ALTER COLUMN ROW_ID TYPE INTEGER;
ALTER TABLE callout ALTER COLUMN row_id SET DATA TYPE integer;
ALTER TABLE d_labitems ALTER COLUMN itemid SET DATA TYPE integer;
ALTER TABLE icustays
ALTER COLUMN row_id TYPE integer;
ALTER TABLE labevents
ALTER COLUMN itemid TYPE integer;
ALTER TABLE patients
ALTER COLUMN row_id TYPE integer;

COPY ADMISSIONS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\ADMISSIONS.csv' WITH CSV HEADER;
COPY CALLOUT FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\CALLOUT.csv' WITH CSV HEADER;
COPY CAREGIVERS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\CAREGIVERS.csv' WITH CSV HEADER;
COPY CHARTEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\CHARTEVENTS.csv' WITH CSV HEADER;
COPY CPTEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\CPTEVENTS.csv' WITH CSV HEADER;
COPY DATETIMEEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\DATETIMEEVENTS.csv' WITH CSV HEADER;
COPY DIAGNOSES_ICD FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\DIAGNOSES_ICD.csv' WITH CSV HEADER;
COPY DRGCODES FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\DRGCODES.csv' WITH CSV HEADER;
COPY D_CPT FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\D_CPT.csv' WITH CSV HEADER;
COPY D_ICD_DIAGNOSES FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\D_ICD_DIAGNOSES.csv' WITH CSV HEADER;
COPY D_ICD_PROCEDURES FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\D_ICD_PROCEDURES.csv' WITH CSV HEADER;
COPY D_ITEMS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\D_ITEMS.csv' WITH CSV HEADER;
COPY D_LABITEMS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\D_LABITEMS.csv' WITH CSV HEADER;
COPY ICUSTAYS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\ICUSTAYS.csv' WITH CSV HEADER;
COPY INPUTEVENTS_CV FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\INPUTEVENTS_CV.csv' WITH CSV HEADER;
COPY INPUTEVENTS_MV FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\INPUTEVENTS_MV.csv' WITH CSV HEADER;
COPY LABEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\LABEVENTS.csv' WITH CSV HEADER;
COPY MICROBIOLOGYEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\MICROBIOLOGYEVENTS.csv' WITH CSV HEADER;
COPY NOTEEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\NOTEEVENTS.csv' WITH CSV HEADER;
COPY OUTPUTEVENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\OUTPUTEVENTS.csv' WITH CSV HEADER;
COPY PATIENTS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\PATIENTS.csv' WITH CSV HEADER;
COPY PRESCRIPTIONS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\PRESCRIPTIONS.csv' WITH CSV HEADER;
COPY PROCEDUREEVENTS_MV FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\PROCEDUREEVENTS_MV.csv' WITH CSV HEADER;
COPY PROCEDURES_ICD FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\PROCEDURES_ICD.csv' WITH CSV HEADER;
COPY SERVICES FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\SERVICES.csv' WITH CSV HEADER;
COPY TRANSFERS FROM 'D:\PostgreSQL\mimic-iii-clinical-database-1.4\TRANSFERS.csv' WITH CSV HEADER;



